{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\baklo\\\\OneDrive\\\\Bureau\\\\file dapp\\\\FileStorage bakloul\\\\client\\\\src\\\\components\\\\Connectwallet.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  useEffect(() => {\n    getCurrentWalletConnected();\n    addWalletListener();\n  }, [walletAddress]);\n  const connectWallet = async () => {\n    if (typeof window != \"undefined\" && typeof window.ethereum != \"undefined\") {\n      try {\n        /* MetaMask is installed */\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setWalletAddress(accounts[0]);\n        console.log(accounts[0]);\n      } catch (err) {\n        console.error(err.message);\n      }\n    } else {\n      /* MetaMask is not installed */\n      console.log(\"Please install MetaMask\");\n    }\n  };\n  const getCurrentWalletConnected = async () => {\n    if (typeof window != \"undefined\" && typeof window.ethereum != \"undefined\") {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_accounts\"\n        });\n        if (accounts.length > 0) {\n          setWalletAddress(accounts[0]);\n          console.log(accounts[0]);\n        } else {\n          console.log(\"Connect to MetaMask using the Connect button\");\n        }\n      } catch (err) {\n        console.error(err.message);\n      }\n    } else {\n      /* MetaMask is not installed */\n      console.log(\"Please install MetaMask\");\n    }\n  };\n  const addWalletListener = async () => {\n    if (typeof window != \"undefined\" && typeof window.ethereum != \"undefined\") {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        setWalletAddress(accounts[0]);\n        console.log(accounts[0]);\n      });\n    } else {\n      /* MetaMask is not installed */\n      setWalletAddress(\"\");\n      console.log(\"Please install MetaMask\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"connect-btn\",\n      onClick: connectWallet,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"btn-txt\",\n        children: walletAddress && walletAddress.length > 0 ? `Connected: ${walletAddress.substring(0, 4)}...${walletAddress.substring(38)}` : \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HFxa1QVQVyclsfvcg8aUeqgFss0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","walletAddress","setWalletAddress","getCurrentWalletConnected","addWalletListener","connectWallet","window","ethereum","accounts","request","method","console","log","err","error","message","length","on","children","className","onClick","substring","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/baklo/OneDrive/Bureau/file dapp/FileStorage bakloul/client/src/components/Connectwallet.jsx"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [walletAddress, setWalletAddress] = useState(\"\");\n\n  useEffect(() => {\n    getCurrentWalletConnected();\n    addWalletListener();\n  }, [walletAddress]);\n\n  const connectWallet = async () => {\n    if (typeof window != \"undefined\" && typeof window.ethereum != \"undefined\") {\n      try {\n        /* MetaMask is installed */\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        setWalletAddress(accounts[0]);\n        console.log(accounts[0]);\n      } catch (err) {\n        console.error(err.message);\n      }\n    } else {\n      /* MetaMask is not installed */\n      console.log(\"Please install MetaMask\");\n    }\n  };\n\n  const getCurrentWalletConnected = async () => {\n    if (typeof window != \"undefined\" && typeof window.ethereum != \"undefined\") {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_accounts\",\n        });\n        if (accounts.length > 0) {\n          setWalletAddress(accounts[0]);\n          console.log(accounts[0]);\n        } else {\n          console.log(\"Connect to MetaMask using the Connect button\");\n        }\n      } catch (err) {\n        console.error(err.message);\n      }\n    } else {\n      /* MetaMask is not installed */\n      console.log(\"Please install MetaMask\");\n\n    }\n  };\n\n  const addWalletListener = async () => {\n    if (typeof window != \"undefined\" && typeof window.ethereum != \"undefined\") {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        setWalletAddress(accounts[0]);\n        console.log(accounts[0]);\n      });\n    } else {\n      /* MetaMask is not installed */\n      setWalletAddress(\"\");\n      console.log(\"Please install MetaMask\");\n    }\n  };\n\n  return (\n    <div>\n      <button className=\"connect-btn\" onClick={connectWallet}>\n        <span className=\"btn-txt\">\n          {walletAddress && walletAddress.length > 0\n            ? `Connected: ${walletAddress.substring(\n                0,\n                4\n              )}...${walletAddress.substring(38)}`\n            : \"Connect Wallet\"}\n        </span>\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
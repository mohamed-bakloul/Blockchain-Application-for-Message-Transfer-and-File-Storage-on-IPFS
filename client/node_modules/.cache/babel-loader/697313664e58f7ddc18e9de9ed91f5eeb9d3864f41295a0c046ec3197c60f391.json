{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\baklo\\\\OneDrive\\\\Bureau\\\\file dapp\\\\File-Storage-System-master\\\\client\\\\src\\\\components\\\\Working.js\";\nimport React from \"react\";\nimport Navbar from \"./Navbar\";\nimport \"./Working.css\";\nimport image1 from \"./images/first-image-min.png\";\nimport image2 from \"./images/second-image-min.png\";\nimport image3 from \"./images/third-image-min.png\";\nimport Discordsvg from \"./Discordsvg\";\nimport Twittersvg from \"./Twittersvg\";\nimport Instagramsvg from \"./Instagramsvg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Working = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-section\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Work-heading\",\n      children: \"Working of File Storage System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"first-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"first-para\",\n        children: \"The process of storing an image on IPFS through Pinata involves three main steps. The first step is to upload the image file to the Pinata platform.This can be done through the Pinata web interface, an API endpoint, or through aPinata SDK if the user is integrating Pinata into a software application. Once the image is uploaded to Pinata, the user \\\"pins\\\" the file to the IPFS network. Pinning a file ensures that it is stored permanently on the IPFS network, and is accessible to anyone who has the file's hash. After the image is pinned, Pinata generates a hash value for the file. This hash value is a unique identifier that can be used to access the file on the IPFS network.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-1\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image3,\n          alt: \"first-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"second-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"second-para\",\n        children: \"The second step is to store the hash on the blockchain, along with any other relevant metadata. This allows the user to associate the image with a specific blockchain transaction, making it easier to verify the authenticity and ownership of the image. The hash can be stored on a public blockchain, such as Ethereum, or on a private blockchain, depending on the user's needs.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-2\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image2,\n          alt: \"second-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"third-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"third-para\",\n        children: \"The final step is to access the image on the IPFS network. To do this, the user simply needs to provide the hash value to an IPFS client. This client can be a web browser with IPFS support, a command-line tool, or a software application that integrates with IPFS. Once the client receives the hash, it can retrieve the image from any node on the IPFS network that has a copy of the file. Since the IPFS network is decentralized, there is no single point of failure, making it a reliable and secure way to store and access files. Overall, using Pinata to store images on IPFS provides a permanent, reliable, and secure way to store and access files, with the added benefits of decentralization and blockchain integration.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-3\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image1,\n          alt: \"first-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"column1-heading\",\n          children: \"Contact Us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"column1-para\",\n          children: \"UpShare@gmail.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"column2-text\",\n          children: \"Get involved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"social-icons\",\n          children: [/*#__PURE__*/_jsxDEV(Discordsvg, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Twittersvg, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Instagramsvg, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Column3-text\",\n          children: \"\\xA9 2023 UpShare. All rights reserved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_c = Working;\nexport default Working;\nvar _c;\n$RefreshReg$(_c, \"Working\");","map":{"version":3,"names":["React","Navbar","image1","image2","image3","Discordsvg","Twittersvg","Instagramsvg","jsxDEV","_jsxDEV","Working","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/baklo/OneDrive/Bureau/file dapp/File-Storage-System-master/client/src/components/Working.js"],"sourcesContent":["import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport \"./Working.css\";\nimport image1 from \"./images/first-image-min.png\";\nimport image2 from \"./images/second-image-min.png\";\nimport image3 from \"./images/third-image-min.png\";\nimport Discordsvg from \"./Discordsvg\";\nimport Twittersvg from \"./Twittersvg\";\nimport Instagramsvg from \"./Instagramsvg\";\n\n\nconst Working = () => {\n    return (\n        <div>\n            <div className=\"navbar-section\">\n                <Navbar />\n            </div>\n            <h1 className=\"Work-heading\">Working of File Storage System</h1>\n            <div className=\"first-section\">\n                <p className=\"first-para\">\n                    The process of storing an image on IPFS through Pinata involves three main steps.\n                    The first step is to upload the image file to the Pinata platform.This can be done\n                    through the Pinata web interface, an API endpoint, or through aPinata SDK if the user\n                    is integrating Pinata into a software application. Once the image is uploaded to Pinata,\n                    the user &quot;pins&quot; the file to the IPFS network. Pinning a file ensures that it is stored\n                    permanently on the IPFS network, and is accessible to anyone who has the file&apos;s hash.\n                    After the image is pinned, Pinata generates a hash value for the file. This hash value\n                    is a unique identifier that can be used to access the file on the IPFS network.\n                </p>\n                <div className=\"image-1\">\n                    <img src={image3} alt=\"first-image\" />\n                </div>\n            </div>\n            <div className=\"second-section\">\n                <p className=\"second-para\">\n                    The second step is to store the hash on the blockchain, along with any other relevant\n                    metadata. This allows the user to associate the image with a specific blockchain\n                    transaction, making it easier to verify the authenticity and ownership of the image.\n                    The hash can be stored on a public blockchain, such as Ethereum, or on a private\n                    blockchain, depending on the user&apos;s needs.\n                </p>\n                <div className=\"image-2\">\n                    <img src={image2} alt=\"second-image\" />\n                </div>\n            </div>\n            <div className=\"third-section\">\n                <p className=\"third-para\">\n                    The final step is to access the image on the IPFS network. To do this, the user simply needs to\n                    provide the hash value to an IPFS client. This client can be a web browser with IPFS support, a\n                    command-line tool, or a software application that integrates with IPFS. Once the client receives\n                    the hash, it can retrieve the image from any node on the IPFS network that has a copy of the file.\n                    Since the IPFS network is decentralized, there is no single point of failure, making it a reliable\n                    and secure way to store and access files. Overall, using Pinata to store images on IPFS provides\n                    a permanent, reliable, and secure way to store and access files, with the added benefits of\n                    decentralization and blockchain integration.\n                </p>\n                <div className=\"image-3\">\n                    <img src={image1} alt=\"first-image\"></img>\n                </div>\n            </div>\n\n            {/* footer section */}\n            <div className=\"footer-section\">\n                <div className=\"column\">\n                    <h2 className=\"column1-heading\">Contact Us</h2>\n                    <p className=\"column1-para\">UpShare@gmail.com</p>\n                </div>\n\n                <div className=\"column\">\n                    <h2 className=\"column2-text\">Get involved</h2>\n                    <div className=\"social-icons\">\n                        <Discordsvg />\n                        <Twittersvg />\n                        <Instagramsvg />\n                    </div>\n                </div>\n\n                <div className=\"column\">\n                    <p className=\"Column3-text\">\n                        © 2023 UpShare. All rights reserved\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Working;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,eAAe;AACtB,OAAOC,MAAM,MAAM,8BAA8B;AACjD,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAOC,MAAM,MAAM,8BAA8B;AACjD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAClB,oBACID,OAAA;IAAAE,QAAA,gBACIF,OAAA;MAAKG,SAAS,EAAC,gBAAgB;MAAAD,QAAA,eAC3BF,OAAA,CAACR,MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACR,eACNP,OAAA;MAAIG,SAAS,EAAC,cAAc;MAAAD,QAAA,EAAC;IAA8B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAChEP,OAAA;MAAKG,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC1BF,OAAA;QAAGG,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAS1B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eACJP,OAAA;QAAKG,SAAS,EAAC,SAAS;QAAAD,QAAA,eACpBF,OAAA;UAAKQ,GAAG,EAAEb,MAAO;UAACc,GAAG,EAAC;QAAa;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACpC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ,eACNP,OAAA;MAAKG,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC3BF,OAAA;QAAGG,SAAS,EAAC,aAAa;QAAAD,QAAA,EAAC;MAM3B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eACJP,OAAA;QAAKG,SAAS,EAAC,SAAS;QAAAD,QAAA,eACpBF,OAAA;UAAKQ,GAAG,EAAEd,MAAO;UAACe,GAAG,EAAC;QAAc;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ,eACNP,OAAA;MAAKG,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC1BF,OAAA;QAAGG,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAS1B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eACJP,OAAA;QAAKG,SAAS,EAAC,SAAS;QAAAD,QAAA,eACpBF,OAAA;UAAKQ,GAAG,EAAEf,MAAO;UAACgB,GAAG,EAAC;QAAa;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAO;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACxC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ,eAGNP,OAAA;MAAKG,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC3BF,OAAA;QAAKG,SAAS,EAAC,QAAQ;QAAAD,QAAA,gBACnBF,OAAA;UAAIG,SAAS,EAAC,iBAAiB;UAAAD,QAAA,EAAC;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAC/CP,OAAA;UAAGG,SAAS,EAAC,cAAc;UAAAD,QAAA,EAAC;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC/C,eAENP,OAAA;QAAKG,SAAS,EAAC,QAAQ;QAAAD,QAAA,gBACnBF,OAAA;UAAIG,SAAS,EAAC,cAAc;UAAAD,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAC9CP,OAAA;UAAKG,SAAS,EAAC,cAAc;UAAAD,QAAA,gBACzBF,OAAA,CAACJ,UAAU;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,eACdP,OAAA,CAACH,UAAU;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,eACdP,OAAA,CAACF,YAAY;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACd;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACJ,eAENP,OAAA;QAAKG,SAAS,EAAC,QAAQ;QAAAD,QAAA,eACnBF,OAAA;UAAGG,SAAS,EAAC,cAAc;UAAAD,QAAA,EAAC;QAE5B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAAAG,EAAA,GA1EKT,OAAO;AA4Eb,eAAeA,OAAO;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\baklo\\\\OneDrive\\\\Bureau\\\\file dapp\\\\FileStorage bakloul\\\\client\\\\src\\\\components\\\\Modal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Modal = _ref => {\n  _s();\n  let {\n    contract\n  } = _ref;\n  const sharing = async () => {\n    const address = document.querySelector(\".address\").value;\n    await contract.allow(address);\n  };\n  const removeallow = async () => {\n    const address = document.querySelector(\".address\").value;\n    await contract.disallow(address);\n  };\n  useEffect(() => {\n    const accessList = async () => {\n      const addressList = await contract.shareAccess();\n      let select = document.querySelector(\"#selectNumber\");\n      const options = addressList;\n      for (let i = 0; i < options.length; i++) {\n        let opt = options[i];\n        let e1 = document.createElement(\"option\");\n        e1.textContent = opt;\n        e1.value = opt;\n        select.appendChild(e1);\n      }\n    };\n    contract && accessList();\n  }, [contract]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalBackground\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"myForm\",\n          className: \"myform\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"address\",\n            placeholder: \"Enter Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => sharing(),\n              className: \"share-btn\",\n              children: \"Share\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeallow(),\n              className: \"disallow-btn\",\n              children: \"Disallow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Modal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Modal;\nModal.propTypes = {\n  contract: PropTypes.shape({\n    allow: PropTypes.any,\n    disallow: PropTypes.any,\n    shareAccess: PropTypes.any\n  })\n};\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useEffect","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","Modal","_ref","_s","contract","sharing","address","document","querySelector","value","allow","removeallow","disallow","accessList","addressList","shareAccess","select","options","i","length","opt","e1","createElement","textContent","appendChild","children","className","id","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","propTypes","shape","any","$RefreshReg$"],"sources":["C:/Users/baklo/OneDrive/Bureau/file dapp/FileStorage bakloul/client/src/components/Modal.js"],"sourcesContent":["import React ,{ useEffect } from \"react\";\nimport PropTypes from \"prop-types\"; \n\nconst Modal = ({ contract }) => {\n  const sharing = async () => {\n    const address = document.querySelector(\".address\").value;\n    await contract.allow(address);\n  };\n  const removeallow = async () => {\n    const address = document.querySelector(\".address\").value;\n    await contract.disallow(address);\n  };\n  useEffect(() => {\n    const accessList = async () => {\n      const addressList = await contract.shareAccess();\n      let select = document.querySelector(\"#selectNumber\");\n      const options = addressList;\n\n      for (let i = 0; i < options.length; i++) {\n        let opt = options[i];\n        let e1 = document.createElement(\"option\");\n        e1.textContent = opt;\n        e1.value = opt;\n        select.appendChild(e1);\n      }\n    };\n    contract && accessList();\n  }, [contract]);\n  return (\n    <>\n      <div className=\"modalBackground\">\n        <div className=\"modalContainer\">\n          <div id=\"myForm\" className=\"myform\">\n            <input\n              type=\"text\"\n              className=\"address\"\n              placeholder=\"Enter Address\"\n            ></input>\n\n            <div className=\"footer\">\n              <button onClick={() => sharing()} className=\"share-btn\">Share</button>\n              <button onClick={() => removeallow()} className=\"disallow-btn\">Disallow</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nModal.propTypes = {\n  contract: PropTypes.shape({\n    allow: PropTypes.any, \n    disallow: PropTypes.any, \n    shareAccess: PropTypes.any, \n  }),\n};\n\nexport default Modal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}